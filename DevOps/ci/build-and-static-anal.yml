trigger:
 branches:
   include:
     - master

pr: none

pool:
  vmImage: windows-2019
  name: Azure Pipelines
  demands:
  - java
  - npm

steps:

- task: UseDotNet@2
  displayName: '.NET Core SDK 3.1.2'
  inputs:
    version: 3.1.200
    performMultiLevelLookup: true

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: |
     **/*.sln

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: '.NET Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: sonarcloud
    organization: igorsikuljak
    projectKey: 'igorsikuljak_HealthcareIS'
    projectName: HealthcareIS

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: |
     **/*.sln
    arguments: '--configuration Release'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: '.NET Run Code Analysis'

#- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
#  displayName: '.NET Publish Quality Gate Result'

- task: Npm@1
  displayName: 'npm install dependencies'
  inputs:
    workingDir: HospitalFrontend/
    verbose: false

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      npm -g install preprocessor
      cd HospitalFrontend
      mkdir src/constant || ls
      preprocess src/api_preprocess/api.js . -SERVER_URL=http://localhost:5000 > src/constant/api.js
      rm -rf src/api_preprocess
      cd ..
  displayName: 'npm preprocess (server url)'

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Frontend Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'sonarcloud-frontend'
    organization: igorsikuljak
    scannerMode: CLI
    configMode: manual
    cliProjectKey: 'igorsikuljak_HealthcareIS_Frontend'
    cliProjectName: 'HealthcareIS Frontend'
    cliSources: HospitalFrontend/src

- task: Npm@1
  displayName: 'npm build'
  inputs:
    command: custom
    workingDir: HospitalFrontend
    verbose: false
    customCommand: 'run purebuild'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Frontend Run Code Analysis'

#- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
#  displayName: 'Frontend Publish Quality Gate Result'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '-c Release'
    zipAfterPublish: false
    modifyOutputPath: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish webms feedback'
  inputs:
    PathtoPublish: Feedback.API/bin/Release/netcoreapp3.1/publish
    ArtifactName: dropfeedback

- task: PublishBuildArtifacts@1
  displayName: 'Publish webms hospital'
  inputs:
    PathtoPublish: Hospital.API/bin/Release/netcoreapp3.1/publish
    ArtifactName: drophospital

- task: PublishBuildArtifacts@1
  displayName: 'Publish webms schedule'
  inputs:
    PathtoPublish: Schedule.API/bin/Release/netcoreapp3.1/publish
    ArtifactName: dropschedule

- task: PublishBuildArtifacts@1
  displayName: 'Publish webms user'
  inputs:
    PathtoPublish: User.API/bin/Release/netcoreapp3.1/publish
    ArtifactName: dropuser

- task: PublishBuildArtifacts@1
  displayName: 'Publish webms proxy ocelot'
  inputs:
    PathtoPublish: OcelotApiGateway/bin/Release/netcoreapp3.1/publish
    ArtifactName: dropocelot

- task: PublishBuildArtifacts@1
  displayName: 'Publish event store'
  inputs:
    PathtoPublish: EventStore.API/bin/Release/netcoreapp3.1/publish
    ArtifactName: dropes