version: "3.8"

services:
  mysql:
    image: mysql
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test
    ports:
      - 3306:3306
      - 33060:33060

  user_api:
    build:
      context: ../../User.API/bin/Debug/netcoreapp3.1/publish/
      dockerfile: ../../../../../DevOps/docker/AspNetDockerfile
    container_name: user-api
    restart: on-failure
    ports:
      - 5003:5003
    depends_on:
      - mysql

  hospital_api:
    build:
      context: ../../Hospital.API/bin/Debug/netcoreapp3.1/publish/
      dockerfile: ../../../../../DevOps/docker/AspNetDockerfile
    container_name: hospital-api
    restart: on-failure
    ports:
      - 5001:5001
    depends_on:
      - mysql

  schedule_api:
    build:
      context: ../../Schedule.API/bin/Debug/netcoreapp3.1/publish/
      dockerfile: ../../../../../DevOps/docker/AspNetDockerfile
    container_name: schedule-api
    restart: on-failure
    ports:
      - 5004:5004
    depends_on:
      - mysql

  feedback_api:
    build:
      context: ../../Feedback.API/bin/Debug/netcoreapp3.1/publish/
      dockerfile: ../../../../../DevOps/docker/AspNetDockerfile
    container_name: feedback-api
    restart: on-failure
    ports:
      - 5002:5002
    depends_on:
      - mysql

  ocelot_api_gateway:
    build:
      context: ../../OcelotApiGateway/bin/Debug/netcoreapp3.1/publish/
      dockerfile: ../../../../../DevOps/docker/AspNetDockerfile
    container_name: ocelot-api-gateway
    restart: on-failure
    ports:
      - 5000:5000

  nginx:
    build:
      context: ../../HospitalFrontend
      dockerfile: ../DevOps/docker/FrontDockerfile
    container_name: front
    environment:
      PORT: 80
    ports:
      - 8080:80
    restart: always
